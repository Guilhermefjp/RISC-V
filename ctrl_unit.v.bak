module ctrl_unit (input 		 zero,
						input  [6:0] op,
						input  [2:0] funct3,
						input 		 funct7,
						output 		 PCSrc,
						output [1:0] ResultSrc,
						output 		 MemWrite,
						output 		 ALUSrc,
						output [1:0] ImmSrc,
						output 		 RegWrite,
						output [2:0] ALUControl);

wire [1:0] ALUOp;
wire op5;
assign op5 = op[5];
						
//			ALU Decoder
//--------------------------------------

always @ (*) begin
	case(ALUOp)
		2'b00 : ALUControl <= 3'b000; 											// add (lw,sw)
		2'b01 : ALUControl <= 3'b001;    										// subtract (beq)
		2'b10 : begin
						case (funct3)
							3'b010 : ALUControl <= 3'b101;						// set less than (slt)
							3'b110 : ALUControl <= 3'b011;						// or (or)
							3'b111 : ALUControl <= 3'b010;						// and (and)
							3'b000 : begin
											case ({op5,funct7})
												2'b00 : ALUControl <= 000; 		//add (add)
												2'b01 : ALUControl <= 000; 		//add (add)
												2'b10 : ALUControl <= 000; 		//add (add)
												2'b11 : ALUControl <= 001; 		//subtract (sub)
											endcase
						endcase
	endcase
end

endmodule
